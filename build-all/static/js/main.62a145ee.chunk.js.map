{"version":3,"sources":["Assets/Images/sana-logo.png","hoc/hoc.js","Components/Toolbar/Nav/Nav.js","Components/Toolbar/Toolbar.js","Components/input/input.js","axios.js","Components/CardInput/cardInput.js","Components/Backdrop/Backdrop.js","Components/Modal/Modal.js","Components/spinner/spinner.js","Container/FirstPage/FirstPage.js","Container/RegisterPage/RegisterPage.js","Components/Logo/Logo.js","Container/Layout/Layout.js","App.js","serviceWorker.js","store/reducer.js","index.js"],"names":["module","exports","__webpack_require__","p","hoc","props","children","nav","react_default","a","createElement","hoc_hoc","className","NavLink","to","toolbar","Nav_Nav","input","inputElement","elementType","style","labelStyle","htmlFor","inputId","label","type","id","name","placeholder","value","onChange","changed","maxLength","map","igkey","key","margin","padding","required","elementConfig","options","option","displayValue","instance","axios","create","baseURL","defaults","headers","common","cardInput","onPaste","pasted","backdrop","show","onClick","clicked","Modal","nextProps","nextState","this","nextModalClass","errorModal","push","modalClass","join","Backdrop_Backdrop","modalClosed","transform","opacity","borderRadius","Component","spinner","FirstPage","state","showModal","modalMessage","data","cardNo","terminalCode","merchantCode","amount","modalClosedHandler","_this","setState","dataValidation","validationResults","parseInt","validationResult","property1","cardNumberHandler","cardNumber","concat","console","log","newFormHandler","document","getElementById","reset","sendHandler","thePackage","post","then","response","catch","err","changedHandler","event","updatedState","Object","objectSpread","updatedElement","target","pasteHandler","e","pastedItem","clipboardData","getData","card1","slice","card2","card3","card4","updateState","_this2","labelCommonStyle","color","marginTop","fontWeight","labelCommonStyleDual","fontSize","spacer","height","tempDate","Date","day","getDate","month","getMonth","date","getFullYear","hour","getHours","minute","getMinutes","time","Components_spinner_spinner","buttons","marginBottom","firstPage","CardInput_cardInput","textAlign","Components_input_input","maxWidth","Components_Modal_Modal","connect","globalData","dispatch","globalSave","completeState","RegisterPage","mobile","registerPage","logo","src","logoImage","alt","Layout","Logo_Logo","Toolbar_Toolbar","Switch","Route","path","component","Redirect","from","App","Container_Layout_Layout","Boolean","window","location","hostname","match","initialState","reducer","arguments","length","undefined","action","newState","store","createStore","ReactDOM","render","es","BrowserRouter","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.62a145ee.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sana-logo.66370879.png\";","\r\n\r\nconst hoc =(props)=> props.children;\r\n\r\nexport default hoc;\r\n\r\n","import React from 'react'\r\nimport Hoc from '../../../hoc/hoc'\r\nimport './Nav.css'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nconst nav =() =>(\r\n    <Hoc>\r\n        <ul className='NavItem'>\r\n            <li>\r\n                <NavLink to='/transaction' >Transaction</NavLink>\r\n            </li>\r\n            <li>\r\n                <NavLink to='/Registration' >Registration</NavLink>\r\n            </li>\r\n        </ul>\r\n    </Hoc>\r\n);      \r\n\r\nexport default nav;\r\n","import React from 'react'\r\nimport Nav from './Nav/Nav'\r\nimport './Toolbar.css'\r\n\r\nconst toolbar =() => (\r\n    <div className='row Toolbar justify-content-center'>\r\n        \r\n        <nav className='col  text-center '>\r\n            <Nav />\r\n        </nav>\r\n    </div>\r\n);\r\n\r\nexport default toolbar;","import React from 'react'\r\nimport Hoc from '../../hoc/hoc'\r\nimport './input.css'\r\n\r\nconst input = ( props ) => {\r\n    let inputElement = null;\r\n    const card=[1,2,3,4];\r\n\r\n    switch ( props.elementType ) {\r\n        case ( 'input' ):\r\n            inputElement = (\r\n               \r\n                <div className=\"form-group no-gutters row\">\r\n                \r\n                    <label style ={props.labelStyle} htmlFor={props.inputId} className=' col-md-3'>\r\n                        {props.label}\r\n                    </label>\r\n\r\n                    <input className=\"form-control col-md-9\"\r\n                        type={props.type}\r\n                        style={props.style}\r\n                        id={props.inputId}\r\n                        name={props.inputId}\r\n                        placeholder={props.placeholder}\r\n                        value={props.value}\r\n                        onChange={props.changed} />\r\n                </div>\r\n            )\r\n\r\n\r\n            break;\r\n\r\n            case ( 'mobile' ):\r\n            inputElement = (\r\n               \r\n                <div className=\"form-group no-gutters row\">\r\n                \r\n                    <label style ={props.labelStyle} htmlFor={props.inputId} className=' col-md-2'>\r\n                        {props.label}\r\n                    </label>\r\n\r\n                    <input className=\"form-control col-md-10\"\r\n                        type={props.type}\r\n                        style={props.style}\r\n                        id={props.inputId}\r\n                        name={props.inputId}\r\n                        placeholder={props.placeholder}\r\n                        value={props.value}\r\n                        onChange={props.changed}\r\n                        maxLength=\"11\" />\r\n                </div>\r\n            )\r\n\r\n\r\n            break;\r\n\r\n        case ( 'textarea' ):\r\n            inputElement = (\r\n                <Hoc>\r\n                    <label style={props.labelStyle}>{props.label}</label>\r\n                    <textarea\r\n                        className=\"form-control\"\r\n                        // style={props.style}\r\n                        id={props.inputId}\r\n                        name={props.inputId}\r\n                        placeholder={props.placeholder}\r\n                        value={props.value}\r\n                        onChange={props.changed} />\r\n                </Hoc>);\r\n            break;\r\n\r\n            // case ('cardd'):\r\n            // inputElement=   <div className='row'>\r\n            //                     <div className='col'>\r\n            //                     <input type={props.type}\r\n            //                     className=\"form-control\"\r\n            //                     style={props.style}\r\n            //                     id={props.inputId}\r\n            //                     placeholder={props.placeholder}\r\n            //                     value={props.value}\r\n            //                     onChange={props.changed} />\r\n            //                     </div>\r\n            //                     <div className='col'>\r\n                                \r\n            //                     <input type={props.type}\r\n            //                     className=\"form-control\"\r\n            //                     style={props.style}\r\n            //                     id={props.inputId+'1'}\r\n            //                     placeholder={props.placeholder}\r\n            //                     value={props.value}\r\n            //                     onChange={props.changed} />\r\n            //                     </div>\r\n            //                     <div className='col'>\r\n                                \r\n            //                     <input type={props.type}\r\n            //                     className=\"form-control\"\r\n            //                     style={props.style}\r\n            //                     id={props.inputId+'2'}\r\n            //                     placeholder={props.placeholder}\r\n            //                     value={props.value}\r\n            //                     onChange={props.changed} />\r\n            //                     </div>\r\n            //                     <div className='col'>\r\n                                \r\n            //                     <input type={props.type}\r\n            //                     className=\"form-control\"\r\n            //                     style={props.style}\r\n            //                     id={props.inputId+'3'}\r\n            //                     placeholder={props.placeholder}\r\n            //                     value={props.value}\r\n            //                     onChange={props.changed} />\r\n            //                  </div>\r\n            //                 </div>\r\n            //     break;\r\n\r\n            case ('card'):\r\n                inputElement=   \r\n                <div className='row no-gutters justify-content-around' >\r\n                    <div className='col-lg'>\r\n                        <label style={props.labelStyle}>{props.label}</label>\r\n                    </div>\r\n                    {card.map(igkey=>{\r\n                        return ( \r\n                            <div key={igkey} className='col-12 col-sm col-lg ' style={{margin:'0px' , padding:'0px'}}>\r\n                                <input type=''\r\n                                    className=\"form-control\"\r\n                                    style={props.style}\r\n                                    id={props.inputId+igkey}\r\n                                    name={props.inputId+igkey}\r\n                                    placeholder={props.placeholder}\r\n                                    value={props.value}\r\n                                    onChange={props.changed} \r\n                                    // pattern=\"\\d4\" \r\n\r\n                                    maxLength=\"8\"\r\n                                    required/>\r\n                            </div>)\r\n                    })}\r\n                </div>\r\n\r\n\r\n                break;\r\n\r\n        case ( 'select' ):\r\n            inputElement = (\r\n                <Hoc>\r\n                    <label style={props.labelStyle}>{props.label}</label>\r\n                    <select\r\n                        value={props.value}\r\n                        onChange={props.changed}\r\n                        name={props.inputId}>\r\n                        {props.elementConfig.options.map(option => (\r\n                            <option key={option.value} value={option.value}>\r\n                                {option.displayValue}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                </Hoc>\r\n            );\r\n            break;\r\n\r\n            // case ( 'date' ):\r\n            // inputElement = (\r\n            //     <Hoc>\r\n            //         <label style={props.labelStyle}>{props.label}</label>\r\n            //         <input type=\"date\" \r\n            //             className=\"form-control\"\r\n            //             style={props.style}\r\n            //             id={props.inputId}\r\n            //             name={props.inputId}\r\n            //             type={props.type}\r\n            //             placeholder={props.placeholder}\r\n            //             value={props.value}\r\n            //             onChange={props.changed} \r\n            //             name=\"transactionDate\"></input>\r\n            //     </Hoc>\r\n            // );\r\n            // break;\r\n            \r\n        default:\r\n        // inputElement = (\r\n        //     <Hoc>\r\n        //         <label style={props.labelStyle}>{props.label}</label>\r\n        //         <input\r\n        //             className=\"form-control\"\r\n        //             style={props.style}\r\n        //             id={props.inputId}\r\n        //             name={props.inputId}\r\n        //             type={props.type}\r\n        //             placeholder={props.placeholder}\r\n        //             value={props.value}\r\n        //             onChange={props.changed} />\r\n        //     </Hoc>)\r\n    }\r\n\r\n    return (\r\n        <Hoc>\r\n            {inputElement}\r\n        </Hoc>\r\n    );\r\n\r\n};\r\nexport default input","import axios from 'axios'\r\n\r\nconst instance =axios.create({\r\n    // baseURL:'https://fanapsimulator.firebaseio.com'\r\n    baseURL:'http://10.20.0.97:8080/deka/sim'\r\n});\r\ninstance.defaults.headers.common['Authorization']='approved';\r\n\r\nexport default instance;","import React from \"react\"\r\nimport Hoc from '../../hoc/hoc'\r\n\r\nconst cardInput =(props)=>{\r\n\r\n\r\n    // const card1 = props.currentCard.slice(0,4)\r\n    // const card2 = props.currentCard.slice(4,8)\r\n    // const card3 = props.currentCard.slice(8,12)\r\n    // const card4 = props.currentCard.slice(12)\r\n\r\n    const inputElement= (\r\n        <Hoc>\r\n\r\n            <div className='row ' >\r\n\r\n                    <div className='col-md-2' style={props.labelStyle}>\r\n                        <label >{props.label}</label>\r\n                    </div>\r\n\r\n                    <div className='col-12 col-md-10'>\r\n                    <div className='row no-gutters'>\r\n                    \r\n                        <div className='pl-1 pt-1 col-6 col-sm-3 '>\r\n                        \r\n                        <input type='text'\r\n                            className=\"form-control\"\r\n                            style={props.style}\r\n                            id={props.inputId+'1'}\r\n                            placeholder={props.placeholder}\r\n                            value={props.value}\r\n                            onChange={props.changed} \r\n                            onPaste={props.pasted}\r\n                            maxLength=\"4\"\r\n                            required/>\r\n                        </div>\r\n\r\n                        <div className='pl-1 pt-1 col-6 col-sm-3 '>\r\n                        \r\n                        <input type='text'\r\n                            className=\"form-control\"\r\n                            style={props.style}\r\n                            id={props.inputId+'2'}\r\n                            placeholder={props.placeholder}\r\n                            value={props.value}\r\n                            onChange={props.changed} \r\n                            maxLength=\"4\"\r\n                            required/>\r\n                        </div>\r\n\r\n                        <div className='pl-1 pt-1 col-6 col-sm-3 '>\r\n                        \r\n                        <input type='text'\r\n                        className=\"form-control\"\r\n                        style={props.style}\r\n                        id={props.inputId+'3'}\r\n                        placeholder={props.placeholder}\r\n\r\n                        value={props.value}\r\n                        onChange={props.changed} \r\n                        maxLength=\"4\"\r\n                        required/>\r\n                        </div>\r\n\r\n                        <div className='pl-1 pt-1  col-6 col-sm-3 '>\r\n                            <input type='text'\r\n                                className=\"form-control\"\r\n                                style={props.style}\r\n                                id={props.inputId+'4'}\r\n                                placeholder={props.placeholder}\r\n                                value={props.value}\r\n                                onChange={props.changed} \r\n                                maxLength=\"4\"\r\n                                required/>\r\n                    </div>\r\n\r\n\r\n                    </div>\r\n                    </div>\r\n            </div>\r\n        </Hoc>\r\n                                )\r\n\r\n    return (\r\n           <Hoc>\r\n               {inputElement}\r\n           </Hoc>\r\n    )\r\n}\r\n\r\nexport default cardInput;","import React from 'react'\r\nimport './Backdrop.css'\r\n\r\nconst backdrop =(props)=>{\r\n    return(\r\n        props.show ? <div className='Backdrop' onClick={props.clicked}></div> : null\r\n    );\r\n\r\n}\r\n\r\nexport default backdrop;","import React, {Component} from 'react'\r\nimport './Modal.css'\r\nimport Backdrop from '../Backdrop/Backdrop'\r\nimport Hoc from '../../hoc/hoc'\r\n\r\n\r\nclass Modal extends Component {\r\n\r\n    shouldComponentUpdate(nextProps,nextState){\r\n        return nextProps.show!==this.props.show || nextProps.children!==this.props.children\r\n    }\r\n\r\n    render(){\r\n\r\n        const nextModalClass=['Modal'];\r\n        \r\n        if (!this.props.errorModal) nextModalClass.push('text-primary')\r\n        else  nextModalClass.push('text-danger')\r\n\r\n        const modalClass= nextModalClass.join(' ');\r\n\r\n        return(\r\n            <Hoc>\r\n                <Backdrop show={this.props.show} clicked={this.props.modalClosed}/>\r\n                <div className={modalClass}\r\n                    style={{\r\n                        transform:this.props.show ? 'translateY(0)' : 'translateY(-100vh)' ,\r\n                        opacity:this.props.show ? '1' : '0',\r\n                        borderRadius:'15px',}}>\r\n\r\n                        {this.props.children}         \r\n\r\n                </div>\r\n            </Hoc>\r\n\r\n    );\r\n}\r\n}\r\n\r\nexport default Modal;\r\n","import React from 'react'\r\nimport  './spinner.css'\r\n\r\nconst spinner=()=>(\r\n    <div className=\"loader\">Loading...</div>\r\n)\r\n\r\nexport default spinner","import React,{Component} from 'react'\r\nimport Hoc from '../../hoc/hoc'\r\nimport Input from '../../Components/input/input'\r\nimport './FirstPage.css'\r\nimport axios from '../../axios'\r\nimport {connect } from 'react-redux'\r\nimport CardInput from '../../Components/CardInput/cardInput';\r\nimport Modal from '../../Components/Modal/Modal'\r\nimport Spinner from '../../Components/spinner/spinner'\r\n\r\n// let newData={}\r\nclass FirstPage extends Component {\r\n\r\n    state={\r\n        spinner:false,\r\n        showModal:false,\r\n        errorModal:false,\r\n        modalMessage:'',\r\n        data:{            \r\n            cardNo: \"\",\r\n            terminalCode: \"\",\r\n            merchantCode: \"\",\r\n            amount: \"\"\r\n    }\r\n       \r\n    }\r\n\r\n    modalClosedHandler =()=>{\r\n        this.setState({showModal:false})\r\n    }\r\n    \r\n    \r\n\r\n    componentDidMount () {\r\n       \r\n    }\r\n\r\n\r\n    dataValidation=()=>{\r\n\r\n        let validationResults={};\r\n\r\n        validationResults['validCard']= (parseInt(this.state.data['card1'])>999 && parseInt(this.state.data['card2'])>999 \r\n        && parseInt(this.state.data['card3'])>999 && parseInt(this.state.data['card4'])>999 \r\n        && parseInt(this.state.data['card1'])<10000 && parseInt(this.state.data['card2'])<10000 \r\n        && parseInt(this.state.data['card3'])<10000 && parseInt(this.state.data['card4'])<10000) ? 0 :1;\r\n\r\n        validationResults['validTerminalCode'] = (parseInt(this.state.data['terminalCode'])>0) ? 0 : 1;\r\n        validationResults['validMerchantCode'] = (parseInt(this.state.data['merchantCode'])>0) ? 0 : 1;\r\n        validationResults['validAmount'] = (parseInt(this.state.data['amount'])>0) ? 0 : 1;\r\n\r\n        var validationResult = 0;\r\n        for (var property1 in validationResults) {\r\n        validationResult += validationResults[property1];\r\n        }\r\n        \r\n        if (validationResult>0) {\r\n            return false;\r\n            // this.setState({showModal:true,errorModal:true,modalMessage:' incorrect inputs !'})\r\n        }\r\n        else return true;\r\n\r\n    }\r\n\r\n\r\n    cardNumberHandler=()=>{\r\n        \r\n            const cardNumber=this.state.data['card1'].concat(this.state.data['card2'])\r\n            .concat(this.state.data['card3']).concat(this.state.data['card4'])\r\n            console.log('[CardnumerGen :]'+cardNumber)\r\n\r\n            return cardNumber\r\n        \r\n    }\r\n\r\n    newFormHandler=()=>{\r\n\r\n        this.dataValidation()\r\n        document.getElementById('inputForm').reset();\r\n    }\r\n\r\n    sendHandler=()=> {\r\n\r\n        const thePackage={\r\n            \r\n                // cardNo: \"5022291052988514\",\r\n                // terminalCode: \"9090001 \",\r\n                // merchantCode: \"90100001 \",\r\n                // amount: \"987654321\"\r\n        }\r\n\r\n        const shouldContinue = this.dataValidation();\r\n\r\n        if (shouldContinue) {\r\n\r\n        thePackage['cardNo']=this.cardNumberHandler();\r\n        thePackage['terminalCode']=this.state.data['terminalCode'];\r\n        thePackage['merchantCode']=this.state.data['merchantCode'];\r\n        thePackage['amount']=this.state.data['amount'];\r\n\r\n\r\n        \r\n        console.log(thePackage)\r\n\r\n        axios.post('/transaction', thePackage)\r\n            .then((response)=>{\r\n                // this.setState({showModal:true})\r\n                // this.setState({modalMessage:' Transaction Completed ✓'})\r\n                this.setState({spinner:false,showModal:true, errorModal:false, modalMessage:' Transaction Completed ✓ '})\r\n                console.log(response)})\r\n            .catch(err=>{\r\n                this.setState({spinner:false,showModal:true,errorModal:true,modalMessage:' Something went wrong !'})\r\n                console.log(err)})\r\n                this.setState({spinner:true})\r\n        }\r\n        else{\r\n            this.setState({spinner:false,showModal:true, errorModal:true, modalMessage:' incorrect inputs !'})\r\n        }\r\n\r\n    }\r\n\r\n    changedHandler=(event)=>{\r\n        // console.log(event.target.id)\r\n        const updatedState={...this.state.data};\r\n        const updatedElement=event.target.value;\r\n        updatedState[event.target.id]=updatedElement;\r\n        // console.log(updatedState)\r\n        this.setState({data:updatedState})\r\n        // console.log(this.state)\r\n\r\n    }\r\n\r\n    pasteHandler=(e)=>{\r\n        const pastedItem=e.clipboardData.getData('text')\r\n\r\n        if ((parseInt(pastedItem)>999999999999999)&&(parseInt(pastedItem)<10000000000000000) ){\r\n            const card1 = pastedItem.slice(0,4)\r\n            const card2 = pastedItem.slice(4,8)\r\n            const card3 = pastedItem.slice(8,12)\r\n            const card4 = pastedItem.slice(12)\r\n\r\n            let updateState={\r\n                ...this.state.data\r\n            }\r\n\r\n            updateState['card1']=card1;\r\n            updateState['card2']=card2;\r\n            updateState['card3']=card3;\r\n            updateState['card4']=card4;\r\n            updateState['cardNo']=pastedItem;\r\n\r\n            this.setState({data:updateState})\r\n\r\n            document.getElementById(\"card1\").value=card1\r\n            document.getElementById(\"card2\").value=card2\r\n            document.getElementById(\"card3\").value=card3\r\n            document.getElementById(\"card4\").value=card4\r\n        }\r\n        \r\n\r\n    }\r\n\r\n\r\n    render () {\r\n\r\n\r\n\r\n        const labelCommonStyle={color:'#616264', marginTop:'5px', fontWeight:'bold' };\r\n        const labelCommonStyleDual={color:'#616264', fontWeight:'bold', fontSize:'14px' };\r\n        const spacer = (<div className='w-100' style={{height:'20px'}}></div>);\r\n\r\n\r\n        const tempDate = new Date();\r\n        let day = tempDate.getDate();\r\n        let month = tempDate.getMonth() + 1;\r\n        const year = tempDate.getFullYear();\r\n\r\n        if (month < 10) month = \"0\" + month;\r\n        if (day < 10) day = \"0\" + day;\r\n        \r\n\r\n        const date = year + \"-\" + month + \"-\" + day; \r\n\r\n        let hour=tempDate.getHours()\r\n        let minute=tempDate.getMinutes();\r\n\r\n        if (minute < 10) minute = \"0\" + minute;\r\n        if (hour < 10) hour = \"0\" + hour;\r\n\r\n        const time=hour+':'+ minute;\r\n\r\n        let spinner= this.state.spinner ? <div style={{height:'200px'}}> <Spinner /> </div> \r\n        : <div><div className='w-100' style={{height:'20px'}}></div><div className='w-100' style={{height:'20px'}}></div>\r\n        </div>;\r\n\r\n        const buttons = this.state.spinner ? null: \r\n            <div>\r\n                {spacer}\r\n                {spacer}\r\n                <button onClick={this.sendHandler} style={{marginBottom:'50px'}} className=\"btn btn-primary\">Send</button>\r\n                <button onClick={this.newFormHandler} style={{marginBottom:'50px'}} className=\"btn ml-3 btn-primary\">Renew</button>\r\n            </div>\r\n        \r\n            \r\n\r\n        const firstPage=(\r\n            <Hoc>\r\n            <form id='inputForm' className='form-horizontal' >\r\n\r\n                    {spacer}\r\n\r\n                    <div className='row'>\r\n\r\n                        <div className='col-sm-6'>\r\n\r\n                        <CardInput elementType='card' label='Card Number:' \r\n                                    placeholder='' inputId='card' \r\n                                    style={{textAlign:'center' }}\r\n                                    labelStyle={{color:'#616264' , fontWeight:'bold', fontSize:'14px'}}\r\n                                    changed={(event)=>{this.changedHandler(event)}}\r\n                                    pasted={(event)=>{this.pasteHandler(event)}}/> \r\n\r\n                        </div>\r\n                        \r\n                        <div className='col-sm-6'>\r\n\r\n                            <Input className=\"form-control\" \r\n                                    inputId='amount' label='Amount:'\r\n                                    labelStyle= {labelCommonStyle}\r\n                                    elementType='input' \r\n                                    type='number' placeholder='Enter Amount'\r\n                                    changed={(event)=>{this.changedHandler(event)}} \r\n                                    />\r\n                    \r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <div className='row'>\r\n\r\n                        <div className='col-sm-6'>\r\n\r\n                        <Input className=\"form-control\" \r\n                                    inputId='terminalCode' label='Terminal Code' elementType='input' \r\n                                    type='text' placeholder=''\r\n                                    style={{height:\"50%\"}}\r\n                                    labelStyle={labelCommonStyleDual}\r\n                                    changed={(event)=>{this.changedHandler(event)}} \r\n                                    /> \r\n\r\n                        </div>\r\n\r\n                        <div className='col-sm-6'>\r\n\r\n                            <Input className=\"form-control\" \r\n                                            inputId='merchantCode' label='Merchant Code' elementType='input' \r\n                                            type='text' placeholder=''\r\n                                            style={{height:\"50%\"}}\r\n                                            labelStyle={labelCommonStyleDual}\r\n                                            changed={(event)=>{this.changedHandler(event)}} \r\n                                            />\r\n                        </div>\r\n\r\n                        </div>\r\n\r\n                    <div className='row'>\r\n                        <div className='col col-sm ' >\r\n                        \r\n                        <Input inputId='transactionDate' label='Date' elementType='input' \r\n                                    type='date'  \r\n                                    name='transactionDate'\r\n                                    // value={this.state.data['date']}\r\n                                    value={date}\r\n                                    // value='2017-06-01'\r\n                                    style={{maxWidth:'160px',margin:'1px', marginTop:'0px'}}\r\n                                    labelStyle={labelCommonStyle}\r\n                                    changed={(event)=>{this.changedHandler(event)}} \r\n                                    /> \r\n                                    <Input inputId='transactionTime' label='Time' elementType='input' \r\n                                    type='time' placeholder=''\r\n                                    value={time}\r\n                                    name='transactionTime'\r\n                                    style={{maxWidth:'160px',margin:'1px', marginTop:'0px'}}\r\n                                    labelStyle={labelCommonStyle}\r\n                                    changed={(event)=>{this.changedHandler(event)}} \r\n                                    />\r\n                                                    \r\n                        </div>\r\n\r\n                   \r\n                        <div className='col col-sm ' >\r\n                        \r\n                       \r\n                                                    \r\n                        </div>\r\n                   </div>\r\n\r\n\r\n                </form>\r\n\r\n                \r\n                {buttons}\r\n                \r\n               </Hoc>\r\n\r\n        )\r\n\r\n        \r\n        return (\r\n            <Hoc >\r\n\r\n                 <Modal show={this.state.showModal}\r\n                        errorModal={this.state.errorModal}\r\n                        modalClosed={this.modalClosedHandler} >\r\n                   <p>{this.state.modalMessage}</p>\r\n                </Modal>\r\n\r\n                \r\n                {firstPage}\r\n\r\n                {spinner}\r\n\r\n            </Hoc>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps=state =>{\r\n    return{\r\n        globalData:state.data\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps= dispatch=>{\r\n    \r\n    return {\r\n        globalSave :(completeState)=>(\r\n            dispatch({type:'GLOBALSAVE', value:completeState})\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(FirstPage);","import React,{Component} from 'react'\r\nimport Hoc from '../../hoc/hoc'\r\nimport Input from '../../Components/input/input'\r\nimport './RegisterPage.css'\r\nimport axios from '../../axios'\r\nimport {connect } from 'react-redux'\r\nimport CardInput from '../../Components/CardInput/cardInput';\r\nimport Modal from '../../Components/Modal/Modal'\r\nimport Spinner from '../../Components/spinner/spinner'\r\n\r\nclass RegisterPage extends Component {\r\n\r\n    state={\r\n        spinner:false,\r\n        showModal:false,\r\n        errorModal:false,\r\n        modalMessage:'',\r\n        data:{            \r\n            cardNo: \"\",\r\n            terminalCode: \"\",\r\n            merchantCode: \"\",\r\n            mobile:\"\"\r\n    }\r\n       \r\n    }\r\n\r\n    modalClosedHandler =()=>{\r\n        this.setState({showModal:false})\r\n    }\r\n    \r\n    \r\n\r\n    componentDidMount () {\r\n       \r\n    }\r\n\r\n\r\n    dataValidation=()=>{\r\n\r\n        let validationResults={};\r\n\r\n        validationResults['validCard']= (parseInt(this.state.data['card1'])>999 && parseInt(this.state.data['card2'])>999 \r\n        && parseInt(this.state.data['card3'])>999 && parseInt(this.state.data['card4'])>999 \r\n        && parseInt(this.state.data['card1'])<10000 && parseInt(this.state.data['card2'])<10000 \r\n        && parseInt(this.state.data['card3'])<10000 && parseInt(this.state.data['card4'])<10000) ? 0 :1;\r\n\r\n        validationResults['validTerminalCode'] = (parseInt(this.state.data['terminalCode'])>0) ? 0 : 1;\r\n        validationResults['validMerchantCode'] = (parseInt(this.state.data['merchantCode'])>0) ? 0 : 1;\r\n        validationResults['validMobile'] = ((parseInt(this.state.data['mobile'])>8999999999)\r\n                                            &&(parseInt(this.state.data['mobile'])<9400000000)) ? 0 : 1;\r\n\r\n        var validationResult = 0;\r\n        for (var property1 in validationResults) {\r\n        validationResult += validationResults[property1];\r\n        }\r\n        \r\n        if (validationResult>0) {\r\n            return false;\r\n            // this.setState({showModal:true,errorModal:true,modalMessage:' incorrect inputs !'})\r\n        }\r\n        else return true;\r\n\r\n    }\r\n\r\n\r\n    cardNumberHandler=()=>{\r\n        if (parseInt(this.state.data['card1'])>999 && parseInt(this.state.data['card2'])>999 \r\n            && parseInt(this.state.data['card3'])>999 && parseInt(this.state.data['card4'])>999 \r\n            && parseInt(this.state.data['card1'])<10000 && parseInt(this.state.data['card2'])<10000 \r\n            && parseInt(this.state.data['card3'])<10000 && parseInt(this.state.data['card4'])<10000) {\r\n            \r\n                const cardNumber=this.state.data['card1'].concat(this.state.data['card2'])\r\n                .concat(this.state.data['card3']).concat(this.state.data['card4'])\r\n                console.log('[CardnumerGen :]'+cardNumber)\r\n            return cardNumber\r\n        }\r\n        else return '5022291052988514';\r\n    }\r\n\r\n    newFormHandler=()=>{\r\n        document.getElementById('inputForm').reset();\r\n    }\r\n\r\n    sendHandler=()=> {\r\n\r\n        const thePackage={\r\n            \r\n            // \"mobile\": \"string\",\r\n            // \"cardNo\": \"string\",\r\n            // \"terminalCode\": \"string\",\r\n            // \"merchantCode\": \"string\"\r\n        }\r\n\r\n        const shouldContinue = this.dataValidation();\r\n\r\n        if (shouldContinue) {\r\n\r\n        thePackage['cardNo']=this.cardNumberHandler();\r\n        thePackage['terminalCode']=this.state.data['terminalCode'];\r\n        thePackage['merchantCode']=this.state.data['merchantCode'];\r\n        thePackage['mobile']=this.state.data['mobile'];\r\n\r\n\r\n        \r\n        console.log(thePackage)\r\n\r\n        axios.post('/register', thePackage)\r\n            .then((response)=>{\r\n                // this.setState({showModal:true})\r\n                // this.setState({modalMessage:' Transaction Completed ✓'})\r\n                this.setState({spinner:false,showModal:true, errorModal:false, modalMessage:' Registration Completed ✓ '})\r\n                console.log(response)})\r\n            .catch(err=>{\r\n                this.setState({spinner:false,showModal:true,errorModal:true,modalMessage:' Something went wrong !'})\r\n                console.log(err)})\r\n                this.setState({spinner:true})\r\n        }\r\n        else{\r\n            this.setState({spinner:false,showModal:true, errorModal:true, modalMessage:' incorrect inputs !'})\r\n        }\r\n\r\n    }\r\n\r\n    changedHandler=(event)=>{\r\n        // console.log(event.target.id)\r\n        const updatedState={...this.state.data};\r\n        const updatedElement=event.target.value;\r\n        updatedState[event.target.id]=updatedElement;\r\n        // console.log(updatedState)\r\n        this.setState({data:updatedState})\r\n        console.log(this.state)\r\n\r\n    }\r\n\r\n    pasteHandler=(e)=>{\r\n        const pastedItem=e.clipboardData.getData('text')\r\n\r\n        if ((parseInt(pastedItem)>999999999999999)&&(parseInt(pastedItem)<10000000000000000) ){\r\n            const card1 = pastedItem.slice(0,4)\r\n            const card2 = pastedItem.slice(4,8)\r\n            const card3 = pastedItem.slice(8,12)\r\n            const card4 = pastedItem.slice(12)\r\n\r\n            let updateState={\r\n                ...this.state.data\r\n            }\r\n\r\n            updateState['card1']=card1;\r\n            updateState['card2']=card2;\r\n            updateState['card3']=card3;\r\n            updateState['card4']=card4;\r\n            updateState['cardNo']=pastedItem;\r\n\r\n            this.setState({data:updateState})\r\n\r\n            document.getElementById(\"card1\").value=card1\r\n            document.getElementById(\"card2\").value=card2\r\n            document.getElementById(\"card3\").value=card3\r\n            document.getElementById(\"card4\").value=card4\r\n        }\r\n        \r\n\r\n    }\r\n\r\n\r\n    render () {\r\n\r\n\r\n\r\n        const labelCommonStyle={color:'#616264', marginTop:'5px', fontWeight:'bold' };\r\n        const labelCommonStyleDual={color:'#616264', fontWeight:'bold', fontSize:'14px' };\r\n        const spacer = (<div className='w-100' style={{height:'20px'}}></div>);\r\n\r\n\r\n        const tempDate = new Date();\r\n        let day = tempDate.getDate();\r\n        let month = tempDate.getMonth() + 1;\r\n        const year = tempDate.getFullYear();\r\n        if (month < 10) month = \"0\" + month;\r\n        if (day < 10) day = \"0\" + day;\r\n        const date = year + \"-\" + month + \"-\" + day; \r\n        let hour=tempDate.getHours()\r\n        let minute=tempDate.getMinutes();\r\n        if (minute < 10) minute = \"0\" + minute;\r\n        if (hour < 10) hour = \"0\" + hour;\r\n        const time=hour+':'+ minute;\r\n\r\n        let spinner= this.state.spinner ? <div style={{height:'200px'}}> <Spinner /> </div> \r\n            : <div><div className='w-100' style={{height:'20px'}}></div><div className='w-100' style={{height:'20px'}}></div>\r\n            </div>;\r\n\r\n        const buttons = this.state.spinner ? null: \r\n            <div>\r\n                {spacer}\r\n                {spacer}\r\n                <button onClick={this.sendHandler} style={{marginBottom:'50px'}} className=\"btn btn-primary\">Send</button>\r\n                <button onClick={this.newFormHandler} style={{marginBottom:'50px'}} className=\"btn ml-3 btn-primary\">Renew</button>\r\n            </div>\r\n\r\n\r\n        const registerPage=(\r\n            <Hoc>\r\n            <form id='inputForm' className='form-horizontal' >\r\n\r\n                    {spacer}\r\n\r\n                    <div className='row'>\r\n\r\n                        <div className='col-sm-6'>\r\n\r\n                        <CardInput elementType='card' label='Card Number:' \r\n                                    placeholder='' inputId='card' \r\n                                    style={{textAlign:'center' }}\r\n                                    labelStyle={{color:'#616264' , fontWeight:'bold', fontSize:'14px'}}\r\n                                    changed={(event)=>{this.changedHandler(event)}}\r\n                                    pasted={(event=>{this.pasteHandler(event)})}/> \r\n\r\n                        </div>\r\n                        \r\n                        <div className='col-sm-6'>\r\n\r\n                            <Input className=\"form-control\" \r\n                                    inputId='mobile' label='Mobile:'\r\n                                    labelStyle= {labelCommonStyle}\r\n                                    elementType='mobile' \r\n                                    // value={this.state.data['mobile']}\r\n                                    type='text' placeholder='Enter mobile'\r\n                                    changed={(event)=>{this.changedHandler(event)}} \r\n                                    />\r\n                    \r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <div className='row'>\r\n\r\n                        <div className='col-sm-6'>\r\n\r\n                        <Input className=\"form-control\" \r\n                                    inputId='terminalCode' label='Terminal Code' elementType='input' \r\n                                    type='text' placeholder=''\r\n                                    style={{height:\"50%\"}}\r\n                                    labelStyle={labelCommonStyleDual}\r\n                                    // value={this.state.data['terminalCode']}\r\n                                    changed={(event)=>{this.changedHandler(event)}} \r\n                                    /> \r\n\r\n                        </div>\r\n\r\n                        <div className='col-sm-6'>\r\n\r\n                            <Input className=\"form-control\" \r\n                                            inputId='merchantCode' label='Merchant Code' elementType='input' \r\n                                            type='text' placeholder=''\r\n                                            style={{height:\"50%\"}}\r\n                                            labelStyle={labelCommonStyleDual}\r\n                                            // value={this.state.data['merchantCode']}\r\n                                            changed={(event)=>{this.changedHandler(event)}} \r\n                                            />\r\n                        </div>\r\n\r\n                        </div>\r\n\r\n                    <div className='row'>\r\n                        <div className='col col-sm ' >\r\n                        \r\n                        <Input inputId='transactionDate' label='Date' elementType='input' \r\n                                    type='date'  \r\n                                    name='transactionDate'\r\n                                    value={date}\r\n                                    style={{maxWidth:'160px',margin:'1px', marginTop:'0px'}}\r\n                                    labelStyle={labelCommonStyle}\r\n                                    changed={(event)=>{this.changedHandler(event)}} \r\n                                    /> \r\n                                    <Input inputId='transactionTime' label='Time' elementType='input' \r\n                                    type='time' placeholder=''\r\n                                    value={time}\r\n                                    name='transactionTime'\r\n                                    style={{maxWidth:'160px',margin:'1px', marginTop:'0px'}}\r\n                                    labelStyle={labelCommonStyle}\r\n                                    changed={(event)=>{this.changedHandler(event)}} \r\n                                    /> \r\n                                                    \r\n                        </div>\r\n\r\n                   \r\n                        <div className='col col-sm ' >\r\n                        \r\n                        \r\n                        </div>\r\n                   </div>\r\n\r\n\r\n                </form>\r\n\r\n                {buttons}\r\n\r\n                </Hoc>\r\n\r\n        )\r\n\r\n        \r\n        return (\r\n            <Hoc >\r\n\r\n                 <Modal show={this.state.showModal}\r\n                        errorModal={this.state.errorModal}\r\n                        modalClosed={this.modalClosedHandler} >\r\n                   <p>{this.state.modalMessage}</p>\r\n                </Modal>\r\n\r\n                \r\n                {registerPage}\r\n\r\n                {spinner}\r\n\r\n\r\n            </Hoc>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps=state =>{\r\n    return{\r\n        globalData:state.data\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps= dispatch=>{\r\n    \r\n    return {\r\n        globalSave :(completeState)=>(\r\n            dispatch({type:'GLOBALSAVE', value:completeState})\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(RegisterPage);","import React from 'react'\r\nimport './Logo.css'\r\nimport logoImage from '../../Assets/Images/sana-logo.png'\r\n\r\nconst logo=() =>(\r\n    <div className='Logo' >\r\n        <img src={logoImage} alt='Sana Logo' />\r\n    </div>\r\n)\r\n\r\nexport default logo;\r\n","import React,{Component} from 'react'\r\nimport './Layout.css'\r\nimport Toolbar from '../../Components/Toolbar/Toolbar'\r\nimport Hoc from '../../hoc/hoc'\r\nimport FirstPage from '../FirstPage/FirstPage'\r\nimport RegisterPage from '../RegisterPage/RegisterPage'\r\nimport Logo from '../../Components/Logo/Logo'\r\nimport {Route, Switch, Redirect} from 'react-router-dom'\r\n\r\n\r\nclass Layout extends Component {\r\n    render () {\r\n        return (\r\n            <div >\r\n            <Hoc >\r\n           \r\n\r\n                <div className = 'row align-items-center no-gutters'>\r\n\r\n                    <div className='col-1 text-center'>\r\n                        <Logo/>\r\n                    </div>\r\n                    \r\n                    <h1 className='col-11 text-center mainHeader'>Sana Simulator</h1>\r\n                </div>\r\n\r\n                <div className='w-100'></div>\r\n                \r\n                <div >\r\n                    <Toolbar />\r\n                </div>  \r\n\r\n                <div className='row  justify-content-center'>\r\n                    <div className='col-12 border layoutMain text-center'>\r\n                        <Switch>\r\n                            <Route path=\"/transaction\"  component={FirstPage} />\r\n                            <Route path=\"/registration\" component={RegisterPage} />\r\n                            <Redirect from='/' to=\"/transaction\" />\r\n\r\n                        </Switch>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </Hoc>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Layout","import React, { Component } from 'react';\n// import logo from './logo.svg';\nimport './App.css';\nimport Layout from './Container/Layout/Layout'\nimport './Bootstrap/css/bootstrap.min.css'\n\nclass App extends Component {\n  render() {\n    return (\n      <div className='App'>\n        <div className=\" container\" >\n\n            <Layout />\n\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\r\nconst initialState={\r\n    data:{}\r\n}\r\n\r\n\r\nconst reducer =(state=initialState,action)=>{\r\n\r\n    switch (action.type){\r\n        case 'GLOBALSAVE' :\r\n            const newState= action.value;\r\n            // newState=action.value;\r\n            console.log(newState)\r\n            return newState\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n    \r\n}\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore} from 'redux'\nimport reducer from './store/reducer'\nimport {Provider } from 'react-redux'\nimport {BrowserRouter} from 'react-router-dom'\n\n\nconst store=createStore(reducer);\n\n// const rend =<Provider store={store}><App /></Provider>\n\nReactDOM.render(<Provider store={store}><BrowserRouter><App /></BrowserRouter></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}